name: Deploy app to k8s

on:
  push:
    tags: '*'
    branches: master

env:
  YC_CREDS: ${{ secrets.YC_SA_JSON_CREDENTIALS }}
  YC_REG: ${{ secrets.REGISTRY_ID }}
  APP_NAME: "sfapp"

jobs:
  build-and-publish-image:
    name: Build And Publish Image
    runs-on: self-hosted
    steps:
    - name: Get last version of repository
      uses: actions/checkout@v4

    - name: Login to Yandex Cloud Container Registry
      uses: yc-actions/yc-cr-login@v2
      with:
        yc-sa-json-credentials: ${{ secrets.YC_SA_JSON_CREDENTIALS }}

    - name: Set docker envs
      run: echo "SFAPP_IMAGE=cr.yandex/$YC_REG/$APP_NAME:${{github.ref_name}}" >> $GITHUB_ENV

    # - name: Build the Docker image
    #   run: docker build . --file Dockerfile --tag $SFAPP_IMAGE

    # - name: Push docker image
    #   run: docker push cr.yandex/$YC_REG/$APP_NAME:${{github.ref_name}}

  deploy-to-k8s:
    name: Deploy to k8s
    runs-on: self-hosted
    steps:
      - name: Get last version of repository
        uses: actions/checkout@v4

      - name: Set kubeconfig file
        run: echo "${{ secrets.KUBECONFIG }}" >> kubeconf

      - name: Set env specific variables
        run: |
          echo "PG_DB_NAME=${{ secrets.PG_DB_NAME }}" >> $GITHUB_ENV
          echo "PG_USER_NAME=${{ secrets.PG_USER_NAME }}" >> $GITHUB_ENV
          echo "PG_PASSWORD=${{ secrets.PG_PASSWORD }}" >> $GITHUB_ENV
          echo "DOCKER_SECRET_NAME=${{ secrets.DOCKER_SECRET_NAME }}" >> $GITHUB_ENV
          echo "DOCKER_SECRET=${{ secrets.DOCKER_SECRET }}" >> $GITHUB_ENV
          echo "KUBECONFIG=$(pwd)/kubeconf" >> $GITHUB_ENV

      - name: check env
        run: |
          echo $KUBECONFIG
          cat $KUBECONFIG